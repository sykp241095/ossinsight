"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[555],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),h=a,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||r;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(67294),a=n(86010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>h});var o=n(87462),a=n(67294),r=n(86010),i=n(72389),l=n(67392),s=n(7094),c=n(12466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:n,block:i,defaultValue:d,values:h,groupId:m,className:g}=e,_=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=h??_.map((e=>{let{props:{value:t,label:n,attributes:o}}=e;return{value:t,label:n,attributes:o}})),v=(0,l.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===d?d:d??(null==(t=_.find((e=>e.props.default)))?void 0:t.props.value)??_[0].props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:y}=(0,s.U)(),[E,w]=(0,a.useState)(f),T=[],{blockElementScrollPositionUntilNextRender:S}=(0,c.o5)();if(null!=m){const e=k[m];null!=e&&e!==E&&b.some((t=>t.value===e))&&w(e)}const C=e=>{const t=e.currentTarget,n=T.indexOf(t),o=b[n].value;o!==E&&(S(t),w(o),null!=m&&y(m,String(o)))},R=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},g)},b.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:e=>T.push(e),onKeyDown:R,onFocus:C,onClick:C},i,{className:(0,r.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":E===t})}),n??t)}))),n?(0,a.cloneElement)(_.filter((e=>e.props.value===E))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},_.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==E})))))}function h(e){const t=(0,i.Z)();return a.createElement(d,(0,o.Z)({key:String(t)},e))}},53740:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var o=n(87462),a=(n(67294),n(3905)),r=n(65488),i=n(85162);const l={title:"Step 3: Get Insights with SQL",sidebar_position:3},s=void 0,c={unversionedId:"workshop/mini-ossinsight/step-by-step/get-insights-with-sql",id:"workshop/mini-ossinsight/step-by-step/get-insights-with-sql",title:"Step 3: Get Insights with SQL",description:"Now, the data is ready, let's try to analyze these data with SQL!",source:"@site/docs/workshop/mini-ossinsight/step-by-step/get-insights-with-sql.mdx",sourceDirName:"workshop/mini-ossinsight/step-by-step",slug:"/workshop/mini-ossinsight/step-by-step/get-insights-with-sql",permalink:"/docs/workshop/mini-ossinsight/step-by-step/get-insights-with-sql",draft:!1,editUrl:"https://github.com/pingcap/ossinsight/tree/main/web/docs/workshop/mini-ossinsight/step-by-step/get-insights-with-sql.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Step 3: Get Insights with SQL",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Step 2: Load Data  to TiDB",permalink:"/docs/workshop/mini-ossinsight/step-by-step/load-data-to-tidb"},next:{title:"NFT Insight \u2714\ufe0f ",permalink:"/docs/workshop/nft-insight"}},u={},p=[{value:"1. Get Insights with Raw SQL!",id:"1-get-insights-with-raw-sql",level:2},{value:"a. Can&#39;t Wait!",id:"a-cant-wait",level:3},{value:"i. Example 1",id:"i-example-1",level:4},{value:"ii. Example 2",id:"ii-example-2",level:4},{value:"iii. Example 3",id:"iii-example-3",level:4},{value:"b. !!! Set Column-Oriented Storage Replica",id:"b--set-column-oriented-storage-replica",level:3},{value:"2. Well done!",id:"2-well-done",level:2}],d={toc:p};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Now, the data is ready, let's try to analyze these data with SQL!"),(0,a.kt)("h2",{id:"1-get-insights-with-raw-sql"},"1. Get Insights with Raw SQL!"),(0,a.kt)("h3",{id:"a-cant-wait"},"a. Can't Wait!"),(0,a.kt)("h4",{id:"i-example-1"},"i. Example 1"),(0,a.kt)("p",null,"Let's learn the data!"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"sql",label:"SQL",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  *\nFROM\n  github_events\nLIMIT\n  1\n"))),(0,a.kt)(i.Z,{value:"explain",label:"Explain",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"+---------------------------+---------+-----------+---------------------+--------------------------------+\n| id                        | estRows | task      | access object       | operator info                  |\n+---------------------------+---------+-----------+---------------------+--------------------------------+\n| Limit_7                   | 1.00    | root      |                     | offset:0, count:1              |\n| \u2514\u2500TableReader_11          | 1.00    | root      |                     | data:Limit_10                  |\n|   \u2514\u2500Limit_10              | 1.00    | cop[tikv] |                     | offset:0, count:1              |\n|     \u2514\u2500TableFullScan_9     | 1.00    | cop[tikv] | table:github_events | keep order:false, stats:pseudo |\n+---------------------------+---------+-----------+---------------------+--------------------------------+\n")))),(0,a.kt)("p",null,"Result:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"***************************[ 1. row ]***************************\nid                     | 0\ntype                   | PushEvent\ncreated_at             | 2014-04-24 20:45:30\nrepo_id                | 17139664\nrepo_name              | recserv.uiowa.edu\nactor_id               | 0\nactor_login            | jwfuller\nlanguage               |\nadditions              | 0\ndeletions              | 0\naction                 |\nnumber                 | 0\ncommit_id              |\ncomment_id             | 0\norg_login              | ITS-UofIowa\norg_id                 | 0\nstate                  |\nclosed_at              | 1970-01-01 00:00:00\ncomments               | 0\npr_merged_at           | 1970-01-01 00:00:00\npr_merged              | 0\npr_changed_files       | 0\npr_review_comments     | 0\npr_or_issue_id         | 0\nevent_day              | 2014-04-24\nevent_month            | 2014-04-01\nevent_year             | 2014\npush_size              | 14\npush_distinct_size     | 0\ncreator_user_login     |\ncreator_user_id        | 0\npr_or_issue_created_at | 1970-01-01 00:00:00\n")),(0,a.kt)("h4",{id:"ii-example-2"},"ii. Example 2"),(0,a.kt)("p",null,"In addition to using aggregation functions for simple statistics, sometimes we need to conduct more complex data analysis, such as calculating percentage points, moving average, cumulative total, etc."),(0,a.kt)("admonition",{title:"Question",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If you need to analyze the star growth trend of the specified repository (Fox example: ",(0,a.kt)("inlineCode",{parentName:"p"},"pingcap/tidb"),") according to the existing data, can you use one SQL to complete it.")),(0,a.kt)("p",null,"At this time, if we only use aggregation functions, our data analysis SQL will become complex, or we need to complete it through additional program processing."),(0,a.kt)("p",null,"TiDB provides ",(0,a.kt)("a",{parentName:"p",href:"https://docs.pingcap.com/tidb/dev/dev-guide-use-common-table-expression"},"common table expression")," and ",(0,a.kt)("a",{parentName:"p",href:"https://docs.pingcap.com/tidb/dev/window-functions"},"window function")," features to help us greatly simplify SQL queries."),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"sql",label:"SQL",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  event_month, stars\nFROM (\n  SELECT\n    date_format(created_at, '%Y-%m-01') as event_month,\n    COUNT(1) OVER (ORDER BY date_format(created_at, '%Y-%m-01')) AS stars,\n    ROW_NUMBER() OVER (PARTITION BY date_format(created_at, '%Y-%m-01')) AS row_num\n  FROM\n    github_events\n  WHERE\n    type = 'WatchEvent'\n    AND repo_id = 41986369\n  ORDER BY 1\n) sub\nWHERE row_num = 1\n;\n"))),(0,a.kt)(i.Z,{value:"explain",label:"Explain SQL",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'+-----------------------------------+----------+-----------+--------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+\n| id                                | estRows  | task      | access object                                                                                          | operator info                                                                                                                |\n+-----------------------------------+----------+-----------+--------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+\n| Projection_13                     | 22324.11 | root      |                                                                                                        | gharchive_dev.github_events.event_month, Column#39                                                                           |\n| \u2514\u2500Selection_40                    | 22324.11 | root      |                                                                                                        | eq(Column#38, 1)                                                                                                             |\n|   \u2514\u2500Window_42                     | 27905.14 | root      |                                                                                                        | count(1)->Column#39 over(order by gharchive_dev.github_events.event_month range between unbounded preceding and current row) |\n|     \u2514\u2500Window_19                   | 27905.14 | root      |                                                                                                        | row_number()->Column#38 over(partition by gharchive_dev.github_events.event_month rows between current row and current row)  |\n|       \u2514\u2500Sort_30                   | 28140.28 | root      |                                                                                                        | gharchive_dev.github_events.event_month                                                                                      |\n|         \u2514\u2500IndexReader_27          | 28140.28 | root      | partition:watch_event                                                                                  | index:IndexRangeScan_26                                                                                                      |\n|           \u2514\u2500IndexRangeScan_26     | 28140.28 | cop[tikv] | table:github_events, index:index_github_events_on_repo_id_type_event_month(repo_id, type, event_month) | range:[41986369 "WatchEvent",41986369 "WatchEvent"], keep order:false                                                        |\n+-----------------------------------+----------+-----------+--------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------+\n')))),(0,a.kt)("p",null,"Reading more:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html"},"Window Function Concepts and Syntax")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://popsql.com/learn-sql/mysql/how-to-calculate-cumulative-sum-running-total-in-mysql"},"How to Calculate Cumulative Sum-Running Total in MySQL"))),(0,a.kt)("h4",{id:"iii-example-3"},"iii. Example 3"),(0,a.kt)("p",null,"The below SQL is picked from ",(0,a.kt)("a",{parentName:"p",href:"/blog/say-thanks-to-github-robots#history-trends"},"blog - Love, Code, and Robot"),", it explains how robots grow on GitHub:"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"sql",label:"SQL",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"WITH bots_with_first_seen AS (\n    SELECT\n        actor_login, MIN(YEAR(created_at)) AS first_seen_at\n    FROM github_events ge\n    WHERE\n        actor_login REGEXP '^(bot-.+|.+bot|.+\\\\[bot\\\\]|.+-bot-.+|robot-.+|.+-ci-.+|.+-ci|.+-testing|.+clabot.+|.+-gerrit|k8s-.+|.+-machine|.+-automation|github-.+|.+-github|.+-service|.+-builds|codecov-.+|.+teamcity.+|jenkins-.+|.+-jira-.+)$'\n    GROUP BY actor_login\n    ORDER BY first_seen_at\n),  acc AS (\n    SELECT\n        COUNT(actor_login) OVER (ORDER BY first_seen_at) AS cnt,\n        first_seen_at AS event_year\n    FROM\n        bots_with_first_seen AS bwfs\n    ORDER BY event_year\n)\nSELECT ANY_VALUE(cnt) AS bots_total, event_year\nFROM acc\nGROUP BY event_year\nORDER BY event_year;\n"))),(0,a.kt)(i.Z,{value:"explain",label:"Explain SQL",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'+------------------------------+-----------+-----------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| id                           | estRows   | task      | access object | operator info                                                                                                                                                                                                                                                          |\n+------------------------------+-----------+-----------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Sort_45                      | 39130.77  | root      |               | Column#44                                                                                                                                                                                                                                                              |\n| \u2514\u2500Projection_47              | 39130.77  | root      |               | any_value(Column#43)->Column#45, Column#44                                                                                                                                                                                                                             |\n|   \u2514\u2500HashAgg_48               | 39130.77  | root      |               | group by:Column#44, funcs:firstrow(Column#43)->Column#43, funcs:firstrow(Column#44)->Column#44                                                                                                                                                                         |\n|     \u2514\u2500CTEFullScan_49         | 39130.77  | root      | CTE:acc       | data:CTE_1                                                                                                                                                                                                                                                             |\n| CTE_1                        | 39130.77  | root      |               | Non-Recursive CTE                                                                                                                                                                                                                                                      |\n| \u2514\u2500Selection_35(Seed Part)    | 39130.77  | root      |               | 1                                                                                                                                                                                                                                                                      |\n|   \u2514\u2500Projection_36            | 48913.46  | root      |               | Column#40, Column#38                                                                                                                                                                                                                                                   |\n|     \u2514\u2500Window_42              | 48913.46  | root      |               | count(gharchive_dev.github_events.actor_login)->Column#40 over(order by Column#38 range between unbounded preceding and current row)                                                                                                                                   |\n|       \u2514\u2500Sort_44              | 48913.46  | root      |               | Column#38                                                                                                                                                                                                                                                              |\n|         \u2514\u2500CTEFullScan_43     | 48913.46  | root      | CTE:bwfs      | data:CTE_0                                                                                                                                                                                                                                                             |\n| CTE_0                        | 48913.46  | root      |               | Non-Recursive CTE                                                                                                                                                                                                                                                      |\n| \u2514\u2500Sort_18(Seed Part)         | 48913.46  | root      |               | Column#36                                                                                                                                                                                                                                                              |\n|   \u2514\u2500Projection_20            | 48913.46  | root      |               | gharchive_dev.github_events.actor_login, Column#36                                                                                                                                                                                                                     |\n|     \u2514\u2500HashAgg_21             | 48913.46  | root      |               | group by:gharchive_dev.github_events.actor_login, funcs:min(gharchive_dev.github_events.event_year)->Column#36, funcs:firstrow(gharchive_dev.github_events.actor_login)->gharchive_dev.github_events.actor_login                                                       |\n|       \u2514\u2500Selection_28         | 191671.20 | root      |               | regexp(gharchive_dev.github_events.actor_login, "^(bot-.+|.+bot|.+\\[bot\\]|.+-bot-.+|robot-.+|.+-ci-.+|.+-ci|.+-testing|.+clabot.+|.+-gerrit|k8s-.+|.+-machine|.+-automation|github-.+|.+-github|.+-service|.+-builds|codecov-.+|.+teamcity.+|jenkins-.+|.+-jira-.+)$") |\n|         \u2514\u2500TableReader_27     | 239589.00 | root      | partition:all | data:TableFullScan_26                                                                                                                                                                                                                                                  |\n|           \u2514\u2500TableFullScan_26 | 239589.00 | cop[tikv] | table:ge      | keep order:false                                                                                                                                                                                                                                                       |\n+------------------------------+-----------+-----------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n')))),(0,a.kt)("p",null,"Result:"),(0,a.kt)("p",null,"(Remember there are only 240k rows stored in your Serverless Tier database.)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"+------------+------------+\n| bots_total | event_year |\n+------------+------------+\n|          3 |       2015 |\n|         10 |       2016 |\n|         14 |       2017 |\n|         21 |       2018 |\n|         40 |       2019 |\n|         54 |       2020 |\n|         73 |       2021 |\n|         82 |       2022 |\n+------------+------------+\n8 rows in set (1.99 sec)\n\nmysql>\n")),(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("center",null,(0,a.kt)("h3",null,'"It works, but could it be faster?", "Of course!"')),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"b--set-column-oriented-storage-replica"},"b. !!! Set Column-Oriented Storage Replica"),(0,a.kt)("p",null,"This step is important enough that it adds column-oriented-storage ability to TiDB - We call it ",(0,a.kt)("a",{parentName:"p",href:"https://docs.pingcap.com/tidb/dev/tiflash-overview"},"TiFlash"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"tiup playground")," installed 1 TiFlash node by default, what we need to do is just make data ",(0,a.kt)("inlineCode",{parentName:"p"},"STORED")," in these replica node too."),(0,a.kt)("p",null,"i. It's easy to set TiFlash replica, different from other software, TiDB uses SQL to take such changes into effect:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE gharchive_dev.github_events SET TIFLASH REPLICA 1;\n")),(0,a.kt)("p",null,"ii. Setting a TiFlash replica will take you some time, so you can use the following SQL statements to check if the procedure is done or not."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM information_schema.tiflash_replica WHERE TABLE_SCHEMA = 'gharchive_dev' and TABLE_NAME = 'github_events';\n")),(0,a.kt)("p",null,"If the result you get is same as follow, that means the procedure is done."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"mysql> SELECT * FROM information_schema.tiflash_replica WHERE TABLE_SCHEMA = 'gharchive_dev' and TABLE_NAME = 'github_events';\n+---------------+---------------+----------+---------------+-----------------+-----------+----------+\n| TABLE_SCHEMA  | TABLE_NAME    | TABLE_ID | REPLICA_COUNT | LOCATION_LABELS | AVAILABLE | PROGRESS |\n+---------------+---------------+----------+---------------+-----------------+-----------+----------+\n| gharchive_dev | github_events |       68 |             1 |                 |         1 |        1 |\n+---------------+---------------+----------+---------------+-----------------+-----------+----------+\n1 row in set (0.27 sec)\n\nmysql>\n")),(0,a.kt)("p",null,"Now try to execute the former robot sql(start with: ",(0,a.kt)("inlineCode",{parentName:"p"},"WITH bots_with_first_seen"),") again, result:"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"sql",label:"SQL",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"WITH bots_with_first_seen AS (\n    SELECT\n        actor_login, MIN(event_year) AS first_seen_at\n    FROM github_events ge\n    WHERE\n        actor_login REGEXP '^(bot-.+|.+bot|.+\\\\[bot\\\\]|.+-bot-.+|robot-.+|.+-ci-.+|.+-ci|.+-testing|.+clabot.+|.+-gerrit|k8s-.+|.+-machine|.+-automation|github-.+|.+-github|.+-service|.+-builds|codecov-.+|.+teamcity.+|jenkins-.+|.+-jira-.+)$'\n    GROUP BY actor_login\n    ORDER BY first_seen_at\n),  acc AS (\n    SELECT\n        COUNT(actor_login) OVER (ORDER BY first_seen_at) AS cnt,\n        first_seen_at AS event_year\n    FROM\n        bots_with_first_seen AS bwfs\n    ORDER BY event_year\n)\nSELECT ANY_VALUE(cnt) AS bots_total, event_year\nFROM acc\nGROUP BY event_year\nORDER BY event_year;\n"))),(0,a.kt)(i.Z,{value:"explain",label:"Explain SQL",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'+----------------------------------------+-----------+--------------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| id                                     | estRows   | task         | access object | operator info                                                                                                                                                                                                                                                          |\n+----------------------------------------+-----------+--------------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Sort_71                                | 39130.77  | root         |               | Column#44                                                                                                                                                                                                                                                              |\n| \u2514\u2500Projection_73                        | 39130.77  | root         |               | any_value(Column#43)->Column#45, Column#44                                                                                                                                                                                                                             |\n|   \u2514\u2500HashAgg_74                         | 39130.77  | root         |               | group by:Column#44, funcs:firstrow(Column#43)->Column#43, funcs:firstrow(Column#44)->Column#44                                                                                                                                                                         |\n|     \u2514\u2500CTEFullScan_75                   | 39130.77  | root         | CTE:acc       | data:CTE_1                                                                                                                                                                                                                                                             |\n| CTE_1                                  | 39130.77  | root         |               | Non-Recursive CTE                                                                                                                                                                                                                                                      |\n| \u2514\u2500Selection_61(Seed Part)              | 39130.77  | root         |               | 1                                                                                                                                                                                                                                                                      |\n|   \u2514\u2500Projection_62                      | 48913.46  | root         |               | Column#40, Column#38                                                                                                                                                                                                                                                   |\n|     \u2514\u2500Window_68                        | 48913.46  | root         |               | count(gharchive_dev.github_events.actor_login)->Column#40 over(order by Column#38 range between unbounded preceding and current row)                                                                                                                                   |\n|       \u2514\u2500Sort_70                        | 48913.46  | root         |               | Column#38                                                                                                                                                                                                                                                              |\n|         \u2514\u2500CTEFullScan_69               | 48913.46  | root         | CTE:bwfs      | data:CTE_0                                                                                                                                                                                                                                                             |\n| CTE_0                                  | 48913.46  | root         |               | Non-Recursive CTE                                                                                                                                                                                                                                                      |\n| \u2514\u2500Sort_18(Seed Part)                   | 48913.46  | root         |               | Column#36                                                                                                                                                                                                                                                              |\n|   \u2514\u2500Projection_20                      | 48913.46  | root         |               | gharchive_dev.github_events.actor_login, Column#36                                                                                                                                                                                                                     |\n|     \u2514\u2500TableReader_54                   | 48913.46  | root         | partition:all | data:ExchangeSender_53                                                                                                                                                                                                                                                 |\n|       \u2514\u2500ExchangeSender_53              | 48913.46  | mpp[tiflash] |               | ExchangeType: PassThrough                                                                                                                                                                                                                                              |\n|         \u2514\u2500Projection_49                | 48913.46  | mpp[tiflash] |               | Column#36, gharchive_dev.github_events.actor_login                                                                                                                                                                                                                     |\n|           \u2514\u2500HashAgg_50                 | 48913.46  | mpp[tiflash] |               | group by:gharchive_dev.github_events.actor_login, funcs:min(Column#49)->Column#36, funcs:firstrow(gharchive_dev.github_events.actor_login)->gharchive_dev.github_events.actor_login                                                                                    |\n|             \u2514\u2500ExchangeReceiver_52      | 48913.46  | mpp[tiflash] |               |                                                                                                                                                                                                                                                                        |\n|               \u2514\u2500ExchangeSender_51      | 48913.46  | mpp[tiflash] |               | ExchangeType: HashPartition, Hash Cols: [name: gharchive_dev.github_events.actor_login, collate: utf8mb4_unicode_ci]                                                                                                                                                   |\n|                 \u2514\u2500HashAgg_25           | 48913.46  | mpp[tiflash] |               | group by:gharchive_dev.github_events.actor_login, funcs:min(gharchive_dev.github_events.event_year)->Column#49                                                                                                                                                         |\n|                   \u2514\u2500Selection_48       | 191671.20 | mpp[tiflash] |               | regexp(gharchive_dev.github_events.actor_login, "^(bot-.+|.+bot|.+\\[bot\\]|.+-bot-.+|robot-.+|.+-ci-.+|.+-ci|.+-testing|.+clabot.+|.+-gerrit|k8s-.+|.+-machine|.+-automation|github-.+|.+-github|.+-service|.+-builds|codecov-.+|.+teamcity.+|jenkins-.+|.+-jira-.+)$") |\n|                     \u2514\u2500TableFullScan_47 | 239589.00 | mpp[tiflash] | table:ge      | keep order:false, PartitionTableScan:true                                                                                                                                                                                                                              |\n+----------------------------------------+-----------+--------------+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n')))),(0,a.kt)("br",null),(0,a.kt)("center",null,(0,a.kt)("h3",null,"It is SUPER faster!")),(0,a.kt)("br",null),(0,a.kt)("p",null,"We won't talk too much about how to get USEFUL insights from such a big data as we are also students in open source software field. All SQLs in this project can be found on page, just click the ",(0,a.kt)("inlineCode",{parentName:"p"},"SHOW SQL")," button on top-right of each chart to get the corresponding SQL."),(0,a.kt)("h2",{id:"2-well-done"},"2. Well done!"),(0,a.kt)("p",null,"Visit ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:30000"},"http://localhost:30000")," to check the mini OSS Insight site."),(0,a.kt)("p",null,"If you have any question, please contact ",(0,a.kt)("a",{parentName:"p",href:"mailto:ossinsight@pingcap.com"},"ossinsight@pingcap.com"),"."))}h.isMDXComponent=!0}}]);